(this["webpackJsonpreusable-react-comp-gurdeeps"]=this["webpackJsonpreusable-react-comp-gurdeeps"]||[]).push([[0],[,,,,,,,function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var r=t(0);t(1);var o=function(e){var n=e.htmlFor,t=e.label,o=e.required;return Object(r.jsxs)("label",{style:{display:"block"},htmlFor:n,children:[o&&Object(r.jsx)("span",{style:{color:"red"},children:" *"})," ",t]})}},,function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var r=t(2),o=t(3),a=t(5),s=t(4),i=t(0),l=t(1),p=function(e){Object(a.a)(t,e);var n=Object(s.a)(t);function t(){var e;Object(r.a)(this,t);for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];return(e=n.call.apply(n,[this].concat(a))).getColor=function(n){return 100===e.props.percent?"green":e.props.percent>50?"lightgreen":"red"},e.getWidthAsPercentOfTotalWidth=function(){return parseInt(e.props.width*(e.props.percent/100),10)},e}return Object(o.a)(t,[{key:"render",value:function(){var e=this.props,n=e.percent,t=e.width,r=e.height;return Object(i.jsx)("div",{style:{border:"solid 1px lightgray",width:t},children:Object(i.jsx)("div",{style:{width:this.getWidthAsPercentOfTotalWidth(),height:r,backgroundColor:this.getColor(n)}})})}}]),t}(t.n(l).a.Component);p.defaultProps={height:5};var d=p},function(e,n,t){"use strict";t.d(n,"a",(function(){return c}));var r=t(6),o=t(14),a=t(8),s=t(0),i=(t(1),t(7)),l=t(15);function p(){var e=Object(o.a)(["\n    margin-bottom: 16px;\n  "]);return p=function(){return e},e}function d(){var e=Object(o.a)(["\n    border: ",";\n    display: block;\n  "]);return d=function(){return e},e}function u(){var e=Object(o.a)(["\n    color: red;\n  "]);return u=function(){return e},e}var c=function(e){var n=e.htmlId,t=e.name,o=e.label,c=e.type,m=void 0===c?"text":c,h=e.required,g=void 0!==h&&h,b=e.onChange,y=e.placeholder,f=e.value,x=e.error,v=e.children,j=Object(a.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]),w=l.a.div(u()),q=l.a.input(d(),x&&"solid 1px red"),T=l.a.div(p());return Object(s.jsxs)(T,{children:[Object(s.jsx)(i.a,{htmlFor:n,label:o,required:g}),Object(s.jsx)(q,Object(r.a)({id:n,type:m,name:t,placeholder:y,value:f,onChange:b,style:x&&{border:"solid 1px red"}},j)),v,x&&Object(s.jsx)(w,{children:x})]})}},function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var r=t(0);t(1);var o=function(){return Object(r.jsx)("svg",{width:"16",height:"16",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 22",children:Object(r.jsxs)("g",{transform:"matrix(.02146 0 0 .02146 1 1)",fill:"#4d4d4d",children:[Object(r.jsx)("path",{d:"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1"}),Object(r.jsx)("circle",{cx:"466.08",cy:"466.02",r:"134.5"})]})})}},function(e,n,t){"use strict";t.d(n,"a",(function(){return b}));var r=t(6),o=t(8),a=t(2),s=t(3),i=t(5),l=t(4),p=t(0),d=t(1),u=t.n(d),c=t(9),m=t(11),h=t(13),g=function(e){Object(i.a)(t,e);var n=Object(l.a)(t);function t(e){var r;return Object(a.a)(this,t),(r=n.call(this,e)).toggleShowPassword=function(e){r.setState((function(e){return{showPassword:!e.showPassword}})),e&&e.preventDefault()},r.state={showPassword:!1},r}return Object(s.a)(t,[{key:"render",value:function(){var e=this.props,n=e.htmlId,t=e.value,a=e.label,s=e.error,i=e.onChange,l=e.placeholder,d=e.maxLength,u=e.showVisibilityToggle,g=e.quality,b=Object(o.a)(e,["htmlId","value","label","error","onChange","placeholder","maxLength","showVisibilityToggle","quality"]),y=this.state.showPassword;return Object(p.jsxs)(h.a,Object(r.a)(Object(r.a)({htmlId:n,label:a,placeholder:l,type:y?"text":"password",onChange:i,value:t,maxLength:d,error:s,required:!0},b),{},{children:[u&&Object(p.jsx)("a",{href:"",onClick:this.toggleShowPassword,style:{marginLeft:5},children:Object(p.jsx)(m.a,{})}),t.length>0&&g&&Object(p.jsx)(c.a,{percent:g,width:130})]}))}}]),t}(u.a.Component);g.defaultProps={maxLength:50,showVisibilityToggle:!1,label:"Password"};var b=g},function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var r=t(6),o=t(8),a=t(0),s=(t(1),t(7));var i=function(e){var n=e.htmlId,t=e.name,i=e.label,l=e.type,p=void 0===l?"text":l,d=e.required,u=void 0!==d&&d,c=e.onChange,m=e.placeholder,h=e.value,g=e.error,b=e.children,y=Object(o.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return Object(a.jsxs)("div",{style:{marginBottom:16},children:[Object(a.jsx)(s.a,{htmlFor:n,label:i,required:u}),Object(a.jsx)("input",Object(r.a)({id:n,type:p,name:t,placeholder:m,value:h,onChange:c,style:g&&{border:"solid 1px red"}},y)),b,g&&Object(a.jsx)("div",{className:"error",style:{color:"red"},children:g})]})}},,,function(e,n,t){},function(e,n){e.exports=[{name:"EyeIcon",description:"SVG Eye Icon",code:'import React from \'react\';\n\n/** SVG Eye Icon */\nfunction EyeIcon() {\n    // Attribution: Fabi\xe1n Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\n    return (\n        <svg width="16" height="16" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22">\n            <g transform="matrix(.02146 0 0 .02146 1 1)" fill="#4d4d4d">\n                <path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" />\n                <circle cx="466.08" cy="466.02" r="134.5" />\n            </g>\n        </svg>\n    )\n}\n\nexport default EyeIcon;',examples:[{name:"Example",description:"",code:"import React from 'react';\nimport EyeIcon from 'reusable-react-comp-gurdeeps/EyeIcon';\n\nexport default function EyeIconExample() {\n    return <EyeIcon />;\n}"}]},{name:"HelloWorld",description:"A super lame component that says Hello with a custom message.",props:{message:{type:{name:"string"},required:!1,description:"Message to display",defaultValue:{value:"'World'",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** A super lame component that says Hello with a custom message. */\nfunction HelloWorld({message}) {\n    return <div>Hello {message}</div>\n}\n\nHelloWorld.propTypes = {\n    /** Message to display */\n    message: PropTypes.string\n};\n\nHelloWorld.defaultProps = {\n    message: 'World'\n};\n\nexport default HelloWorld;",examples:[{name:"ExampleHelloWorld",description:"Custom message",code:"import React from 'react';\nimport HelloWorld from 'reusable-react-comp-gurdeeps/HelloWorld';\n\n/** Custom message */\nexport default function ExampleHelloWorld() {\n    return <HelloWorld message=\"Pluralsight viewers!\" />\n}"}]},{name:"Label",description:"Label with required field display, htmlFor, and block styling",props:{htmlFor:{type:{name:"string"},required:!0,description:"HTML ID for associated input"},label:{type:{name:"string"},required:!0,description:"Label text"},required:{type:{name:"bool"},required:!1,description:"Display asterisk after label if true"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Label with required field display, htmlFor, and block styling */\nfunction Label({htmlFor, label, required}) {\n    return (\n        <label style={{display: 'block'}} htmlFor={htmlFor}>\n             { required && <span style={{color: 'red'}}> *</span> } {label}\n        </label>\n    )\n}\n\nLabel.propTypes = {\n    /** HTML ID for associated input */\n    htmlFor: PropTypes.string.isRequired,\n\n    /** Label text */\n    label: PropTypes.string.isRequired,\n\n    /** Display asterisk after label if true */\n    required: PropTypes.bool\n};\n\nexport default Label;",examples:[{name:"ExampleOptional",description:"Optional label",code:"import React from 'react';\nimport Label from 'reusable-react-comp-gurdeeps/Label';\n\n/** Optional label */\nexport default function ExampleOptional() {\n    return <Label htmlFor=\"test\" label=\"test\" />\n}"},{name:"ExampleRequired",description:"Required label",code:"import React from 'react';\nimport Label from 'reusable-react-comp-gurdeeps/Label';\n\n/** Required label */\nexport default function ExampleRequired() {\n    return <Label htmlFor=\"test\" label=\"test\" required />\n}"}]},{name:"PasswordInput",description:"Password input with integrated label, quality tips, and show password toggle.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used by convention."},value:{type:{name:"any"},required:!1,description:"Password value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:"'Password'",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder displayed when no password is entered"},showVisibilityToggle:{type:{name:"bool"},required:!1,description:"Set to true to show the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Display password quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from '../ProgressBar';\nimport EyeIcon from '../EyeIcon';\nimport TextInput from '../TextInput';\n\n/** Password input with integrated label, quality tips, and show password toggle. */\nclass PasswordInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPassword: false\n        }\n    }\n\n    toggleShowPassword = event => {\n        this.setState(prevState => {\n            return { showPassword: !prevState.showPassword };\n        });\n        if (event) event.preventDefault();\n    };\n\n    render() {\n        const { htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...props } = this.props;\n        const { showPassword } = this.state;\n\n        return (\n            <TextInput\n                htmlId={htmlId}\n                label={label}\n                placeholder={placeholder}\n                type={showPassword ? 'text' : 'password'}\n                onChange={onChange}\n                value={value}\n                maxLength={maxLength}\n                error={error}\n                required\n                {...props}>\n                {\n                    showVisibilityToggle &&\n                    <a\n                        href=\"\"\n                        onClick={this.toggleShowPassword}\n                        style={{ marginLeft: 5 }}>\n                        <EyeIcon />\n                    </a>\n                }\n                {\n                    value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\n                }\n            </TextInput>\n        );\n    }\n}\n\nPasswordInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n\n    /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\n    name: PropTypes.string.isRequired,\n\n    /** Password value */\n    value: PropTypes.any,\n\n    /** Input label */\n    label: PropTypes.string,\n\n    /** Function called when password input value changes */\n    onChange: PropTypes.func.isRequired,\n\n    /** Max password length accepted */\n    maxLength: PropTypes.number,\n\n    /** Placeholder displayed when no password is entered */\n    placeholder: PropTypes.string,\n\n    /** Set to true to show the toggle for displaying the currently entered password */\n    showVisibilityToggle: PropTypes.bool,\n\n    /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n    quality: PropTypes.number,\n\n    /** Validation error to display */\n    error: PropTypes.string\n};\n\nPasswordInput.defaultProps = {\n    maxLength: 50,\n    showVisibilityToggle: false,\n    label: 'Password'\n};\n\nexport default PasswordInput;",examples:[{name:"ExampleAllFeatures",description:"All features enabled",code:"import React from 'react';\nimport PasswordInput from 'reusable-react-comp-gurdeeps/PasswordInput';\n\n/** All features enabled */\nclass ExampleAllFeatures extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            password: ''\n        };\n    }\n\n    getQuality() {\n        const length = this.state.password.length;\n        return length > 10 ? 100 : length * 10;\n    }\n\n    render() {\n        return (\n            <div>\n                <PasswordInput\n                    htmlId=\"password-input-example-all-features\"\n                    name=\"password\"\n                    onChange={ event => this.setState({ password: event.target.value })}\n                    value={this.state.password}\n                    minLength={8}\n                    placeholder=\"Enter password\"\n                    showVisibilityToggle\n                    quality={this.getQuality()}\n                    {...this.props} />\n            </div>\n        )\n    }\n}\n\nexport default ExampleAllFeatures;"}]},{name:"ProgressBar",description:"",props:{percent:{type:{name:"number"},required:!0,description:"Percent of progress completed"},width:{type:{name:"number"},required:!0,description:"Bar width"},height:{type:{name:"number"},required:!1,description:"Bar height",defaultValue:{value:"5",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProgressBar extends React.Component {\n    getColor = (percent) => {\n        if (this.props.percent === 100) return 'green';\n        return this.props.percent > 50 ? 'lightgreen' : 'red';\n    };\n\n    getWidthAsPercentOfTotalWidth = () => {\n        return parseInt(this.props.width * (this.props.percent / 100), 10);\n    };\n\n    render() {\n        const {percent, width, height} = this.props;\n        return (\n            <div style={{border: 'solid 1px lightgray', width: width}}>\n                <div style={{\n                    width: this.getWidthAsPercentOfTotalWidth(),\n                    height,\n                    backgroundColor: this.getColor(percent)\n                }} />\n            </div>\n        );\n    }\n}\n\nProgressBar.propTypes = {\n    /** Percent of progress completed */\n    percent: PropTypes.number.isRequired,\n\n    /** Bar width */\n    width: PropTypes.number.isRequired,\n\n    /** Bar height */\n    height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n    height: 5\n};\n\nexport default ProgressBar;",examples:[{name:"Example100Percent",description:"100% progress and height of 10px",code:"import React from 'react';\nimport ProgressBar from 'reusable-react-comp-gurdeeps/ProgressBar';\n\n/** 100% progress and height of 10px*/\nexport default function Example100Percent() {\n    return <ProgressBar percent={100} width={150} height={10}/>\n}"},{name:"Example10Percent",description:"10% progress",code:"import React from 'react';\nimport ProgressBar from 'reusable-react-comp-gurdeeps/ProgressBar';\n\n/** 10% progress */\nexport default function Example10Percent() {\n    return <ProgressBar percent={10} width={150} />\n}"},{name:"Example70Percent",description:"70% progress",code:"import React from 'react';\nimport ProgressBar from 'reusable-react-comp-gurdeeps/ProgressBar';\n\n/** 70% progress */\nexport default function Example70Percent() {\n    return <ProgressBar percent={70} width={150} />\n}"}]},{name:"RegistrationForm",description:"Registration form with built-in validation.",props:{confirmationMessage:{type:{name:"string"},required:!1,description:"Message displayed upon successful submission",defaultValue:{value:'"Thanks for registering!"',computed:!1}},onSubmit:{type:{name:"func"},required:!0,description:"Called when form is submitted"},minPasswordLength:{type:{name:"number"},required:!1,description:"Minimum password length",defaultValue:{value:"8",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport TextInput from \'../TextInput\';\nimport PasswordInput from \'../PasswordInput\';\n\n/** Registration form with built-in validation. */\nclass RegistrationForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {\n                email: \'\',\n                password: \'\'\n            },\n            errors: {},\n            submitted: false,\n        };\n    }\n\n    onChange = (event) => {\n        const user = this.state.user;\n        user[event.target.name] = event.target.value;\n        this.setState({user});\n    };\n\n    // Returns a number from 0 to 100 that represents password quality.\n    // For simplicity, just returning % of min length entered.\n    // Could enhance with checks for number, special char, unique characters, etc.\n    passwordQuality(password) {\n        if (!password) return null;\n        if (password.length >= this.props.minPasswordLength) return 100;\n        const percentOfMinLength = parseInt(password.length/this.props.minPasswordLength * 100, 10);\n        return percentOfMinLength;\n    }\n\n    validate({email, password}) {\n        const errors = {};\n        const {minPasswordLength} = this.props;\n\n        if (!email) errors.email = \'Email required.\';\n        if (password.length < minPasswordLength) errors.password = `Password must be at least ${minPasswordLength} characters.`;\n\n        this.setState({errors});\n        const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\n        return formIsValid;\n    }\n\n    onSubmit = () => {\n        const {user} = this.state;\n        const formIsValid = this.validate(user);\n        if (formIsValid) {\n            this.props.onSubmit(user);\n            this.setState({submitted: true});\n        }\n    };\n\n    render() {\n        const {errors, submitted} = this.state;\n        const {email, password} = this.state.user;\n\n        return (\n            submitted ?\n                <h2>{this.props.confirmationMessage}</h2> :\n                <div>\n                    <TextInput\n                        htmlId="registration-form-email"\n                        name="email"\n                        onChange={this.onChange}\n                        label="Email"\n                        value={email}\n                        error={errors.email}\n                        required />\n\n                    <PasswordInput\n                        htmlId="registration-form-password"\n                        name="password"\n                        value={password}\n                        onChange={this.onChange}\n                        quality={this.passwordQuality(password)}\n                        showVisibilityToggle\n                        maxLength={50}\n                        error={errors.password} />\n\n                    <input type="submit" value="Register" onClick={this.onSubmit} />\n                </div>\n        )\n    }\n}\n\nRegistrationForm.propTypes = {\n    /** Message displayed upon successful submission */\n    confirmationMessage: PropTypes.string,\n\n    /** Called when form is submitted */\n    onSubmit: PropTypes.func.isRequired,\n\n    /** Minimum password length */\n    minPasswordLength: PropTypes.number\n};\n\nRegistrationForm.defaultProps = {\n    confirmationMessage: "Thanks for registering!",\n    minPasswordLength: 8\n};\n\nexport default RegistrationForm;',examples:[{name:"ExampleRegistrationForm",description:"",code:"import React from 'react';\nimport RegistrationForm from 'reusable-react-comp-gurdeeps/RegistrationForm';\n\nexport default class ExampleRegistrationForm extends React.Component {\n    onSubmit = (user) => {\n        console.log(user);\n    };\n\n    render() {\n        return <RegistrationForm onSubmit={this.onSubmit} />\n    }\n}"}]},{name:"TextInput",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n    return (\n        <div style={{marginBottom: 16}}>\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <input\n                id={htmlId}\n                type={type}\n                name={name}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n                style={error && {border: 'solid 1px red'}}\n                {...props}/>\n            {children}\n            {error && <div className=\"error\" style={{color: 'red'}}>{error}</div>}\n        </div>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n\n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n\n    /** Input label */\n    label: PropTypes.string.isRequired,\n\n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n\n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n\n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n\n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n\n    /** Value */\n    value: PropTypes.any,\n\n    /** String to display when error occurs */\n    error: PropTypes.string,\n\n    /** Child component to display next to the input */\n    children: PropTypes.node\n};\n\nexport default TextInput;",examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInput from \'reusable-react-comp-gurdeeps/TextInputStyledComponents\';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n    render() {\n        return (\n            <TextInput\n                htmlId="example-error"\n                label="First Name"\n                name="firstname"\n                onChange={() => {}}\n                required\n                error="First name is required."\n            />\n        )\n    }\n}'},{name:"ExampleOptional",description:"Optional TextBox",code:'import React from \'react\';\nimport TextInput from \'reusable-react-comp-gurdeeps/TextInputStyledComponents\';\n\n/** Optional TextBox */\nexport default class ExampleOptional extends React.Component {\n    render() {\n        return (\n            <TextInput\n                htmlId="example-optional"\n                label="First Name"\n                name="firstname"\n                onChange={() => {}}\n            />\n        )\n    }\n}'}]},{name:"TextInputBEM",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n    return (\n        <div className=\"textinput\">\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <input\n                id={htmlId}\n                type={type}\n                name={name}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n                className={error && 'textinput__input--state-error'}\n                {...props}/>\n            {children}\n            {error && <div className=\"textinput__error\">{error}</div>}\n        </div>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n\n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n\n    /** Input label */\n    label: PropTypes.string.isRequired,\n\n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n\n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n\n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n\n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n\n    /** Value */\n    value: PropTypes.any,\n\n    /** String to display when error occurs */\n    error: PropTypes.string,\n\n    /** Child component to display next to the input */\n    children: PropTypes.node\n};\n\nexport default TextInput;",examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInputBEM from \'reusable-react-comp-gurdeeps/TextInputBEM\';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n    render() {\n        return (\n            <TextInputBEM\n                htmlId="example-error"\n                label="First Name"\n                name="firstname"\n                onChange={() => {}}\n                required\n                error="First name is required."\n            />\n        )\n    }\n}'}]},{name:"TextInputCSSModules",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\nimport styles from './textInput.css';\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n    return (\n        <div className={styles.fieldset}>\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <input\n                id={htmlId}\n                type={type}\n                name={name}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n                className={error && styles.inputError}\n                {...props}/>\n            {children}\n            {error && <div className={styles.error}>{error}</div>}\n        </div>\n    );\n};\n\nTextInput.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n\n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n\n    /** Input label */\n    label: PropTypes.string.isRequired,\n\n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n\n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n\n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n\n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n\n    /** Value */\n    value: PropTypes.any,\n\n    /** String to display when error occurs */\n    error: PropTypes.string,\n\n    /** Child component to display next to the input */\n    children: PropTypes.node\n};\n\nexport default TextInput;",examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInputCSSModules from \'reusable-react-comp-gurdeeps/TextInputCSSModules\';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n    render() {\n        return (\n            <TextInputCSSModules\n                htmlId="example-optional"\n                label="First Name"\n                name="firstname"\n                onChange={() => {}}\n                required\n                error="First name is required."\n            />\n        )\n    }\n}'}]},{name:"TextInputStyledComponents",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInputStyledComponents({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n    const Error = styled.div`\n    color: red;\n  `;\n\n    const Input = styled.input`\n    border: ${error && 'solid 1px red'};\n    display: block;\n  `;\n\n    const Fieldset = styled.div`\n    margin-bottom: 16px;\n  `;\n\n    return (\n        <Fieldset>\n            <Label htmlFor={htmlId} label={label} required={required} />\n            <Input\n                id={htmlId}\n                type={type}\n                name={name}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n                style={error && {border: 'solid 1px red'}}\n                {...props}/>\n            {children}\n            {error && <Error>{error}</Error>}\n        </Fieldset>\n    );\n};\n\nTextInputStyledComponents.propTypes = {\n    /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n    htmlId: PropTypes.string.isRequired,\n\n    /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n    name: PropTypes.string.isRequired,\n\n    /** Input label */\n    label: PropTypes.string.isRequired,\n\n    /** Input type */\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n\n    /** Mark label with asterisk if set to true */\n    required: PropTypes.bool,\n\n    /** Function to call onChange */\n    onChange: PropTypes.func.isRequired,\n\n    /** Placeholder to display when empty */\n    placeholder: PropTypes.string,\n\n    /** Value */\n    value: PropTypes.any,\n\n    /** String to display when error occurs */\n    error: PropTypes.string,\n\n    /** Child component to display next to the input */\n    children: PropTypes.node\n};\n\nexport default TextInputStyledComponents;",examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInputStyledComponents from \'reusable-react-comp-gurdeeps/TextInputStyledComponents\';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n    render() {\n        return (\n            <TextInputStyledComponents\n                htmlId="example-error"\n                label="First Name"\n                name="firstname"\n                onChange={() => {}}\n                required\n                error="First name is required."\n            />\n        )\n    }\n}'},{name:"ExampleOptional",description:"Optional TextBox",code:'import React from \'react\';\nimport TextInputStyledComponents from \'reusable-react-comp-gurdeeps/TextInputStyledComponents\';\n\n/** Optional TextBox */\nexport default class ExampleOptional extends React.Component {\n    render() {\n        return (\n            <TextInputStyledComponents\n                htmlId="example-optional"\n                label="First Name"\n                name="firstname"\n                onChange={() => {}}\n            />\n        )\n    }\n}'}]}]},,,function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return a}));var r=t(0),o=(t(1),t(11));function a(){return Object(r.jsx)(o.a,{})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return a}));var r=t(0),o=(t(1),t(7));function a(){return Object(r.jsx)(o.a,{htmlFor:"test",label:"test"})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return a}));var r=t(0),o=(t(1),t(7));function a(){return Object(r.jsx)(o.a,{htmlFor:"test",label:"test",required:!0})}},function(e,n,t){"use strict";t.r(n);var r=t(6),o=t(2),a=t(3),s=t(5),i=t(4),l=t(0),p=t(1),d=t.n(p),u=t(12),c=function(e){Object(s.a)(t,e);var n=Object(i.a)(t);function t(e){var r;return Object(o.a)(this,t),(r=n.call(this,e)).state={password:""},r}return Object(a.a)(t,[{key:"getQuality",value:function(){var e=this.state.password.length;return e>10?100:10*e}},{key:"render",value:function(){var e=this;return Object(l.jsx)("div",{children:Object(l.jsx)(u.a,Object(r.a)({htmlId:"password-input-example-all-features",name:"password",onChange:function(n){return e.setState({password:n.target.value})},value:this.state.password,minLength:8,placeholder:"Enter password",showVisibilityToggle:!0,quality:this.getQuality()},this.props))})}}]),t}(d.a.Component);n.default=c},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return a}));var r=t(0),o=(t(1),t(9));function a(){return Object(r.jsx)(o.a,{percent:100,width:150,height:10})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return a}));var r=t(0),o=(t(1),t(9));function a(){return Object(r.jsx)(o.a,{percent:10,width:150})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return a}));var r=t(0),o=(t(1),t(9));function a(){return Object(r.jsx)(o.a,{percent:70,width:150})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return u}));var r=t(2),o=t(3),a=t(5),s=t(4),i=t(0),l=t(1),p=t.n(l),d=t(10),u=function(e){Object(a.a)(t,e);var n=Object(s.a)(t);function t(){return Object(r.a)(this,t),n.apply(this,arguments)}return Object(o.a)(t,[{key:"render",value:function(){return Object(i.jsx)(d.a,{htmlId:"example-error",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}}]),t}(p.a.Component)},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return u}));var r=t(2),o=t(3),a=t(5),s=t(4),i=t(0),l=t(1),p=t.n(l),d=t(10),u=function(e){Object(a.a)(t,e);var n=Object(s.a)(t);function t(){return Object(r.a)(this,t),n.apply(this,arguments)}return Object(o.a)(t,[{key:"render",value:function(){return Object(i.jsx)(d.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){}})}}]),t}(p.a.Component)},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return u}));var r=t(2),o=t(3),a=t(5),s=t(4),i=t(0),l=t(1),p=t.n(l),d=t(10),u=function(e){Object(a.a)(t,e);var n=Object(s.a)(t);function t(){return Object(r.a)(this,t),n.apply(this,arguments)}return Object(o.a)(t,[{key:"render",value:function(){return Object(i.jsx)(d.a,{htmlId:"example-error",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}}]),t}(p.a.Component)},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return u}));var r=t(2),o=t(3),a=t(5),s=t(4),i=t(0),l=t(1),p=t.n(l),d=t(10),u=function(e){Object(a.a)(t,e);var n=Object(s.a)(t);function t(){return Object(r.a)(this,t),n.apply(this,arguments)}return Object(o.a)(t,[{key:"render",value:function(){return Object(i.jsx)(d.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){}})}}]),t}(p.a.Component)},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return s}));var r=t(0);t(1);function o(e){var n=e.message;return Object(r.jsxs)("div",{children:["Hello ",n]})}o.defaultProps={message:"World"};var a=o;function s(){return Object(r.jsx)(a,{message:"Pluralsight viewers!"})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return h}));var r=t(2),o=t(3),a=t(5),s=t(4),i=t(0),l=t(1),p=t.n(l),d=t(13),u=t(12),c=function(e){Object(a.a)(t,e);var n=Object(s.a)(t);function t(e){var o;return Object(r.a)(this,t),(o=n.call(this,e)).onChange=function(e){var n=o.state.user;n[e.target.name]=e.target.value,o.setState({user:n})},o.onSubmit=function(){var e=o.state.user;o.validate(e)&&(o.props.onSubmit(e),o.setState({submitted:!0}))},o.state={user:{email:"",password:""},errors:{},submitted:!1},o}return Object(o.a)(t,[{key:"passwordQuality",value:function(e){return e?e.length>=this.props.minPasswordLength?100:parseInt(e.length/this.props.minPasswordLength*100,10):null}},{key:"validate",value:function(e){var n=e.email,t=e.password,r={},o=this.props.minPasswordLength;return n||(r.email="Email required."),t.length<o&&(r.password="Password must be at least ".concat(o," characters.")),this.setState({errors:r}),0===Object.getOwnPropertyNames(r).length}},{key:"render",value:function(){var e=this.state,n=e.errors,t=e.submitted,r=this.state.user,o=r.email,a=r.password;return t?Object(i.jsx)("h2",{children:this.props.confirmationMessage}):Object(i.jsxs)("div",{children:[Object(i.jsx)(d.a,{htmlId:"registration-form-email",name:"email",onChange:this.onChange,label:"Email",value:o,error:n.email,required:!0}),Object(i.jsx)(u.a,{htmlId:"registration-form-password",name:"password",value:a,onChange:this.onChange,quality:this.passwordQuality(a),showVisibilityToggle:!0,maxLength:50,error:n.password}),Object(i.jsx)("input",{type:"submit",value:"Register",onClick:this.onSubmit})]})}}]),t}(p.a.Component);c.defaultProps={confirmationMessage:"Thanks for registering!",minPasswordLength:8};var m=c,h=function(e){Object(a.a)(t,e);var n=Object(s.a)(t);function t(){var e;Object(r.a)(this,t);for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];return(e=n.call.apply(n,[this].concat(a))).onSubmit=function(e){console.log(e)},e}return Object(o.a)(t,[{key:"render",value:function(){return Object(i.jsx)(m,{onSubmit:this.onSubmit})}}]),t}(p.a.Component)},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return h}));var r=t(2),o=t(3),a=t(5),s=t(4),i=t(0),l=t(1),p=t.n(l),d=(t(44),t(6)),u=t(8),c=t(7);var m=function(e){var n=e.htmlId,t=e.name,r=e.label,o=e.type,a=void 0===o?"text":o,s=e.required,l=void 0!==s&&s,p=e.onChange,m=e.placeholder,h=e.value,g=e.error,b=e.children,y=Object(u.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return Object(i.jsxs)("div",{className:"textinput",children:[Object(i.jsx)(c.a,{htmlFor:n,label:r,required:l}),Object(i.jsx)("input",Object(d.a)({id:n,type:a,name:t,placeholder:m,value:h,onChange:p,className:g&&"textinput__input--state-error"},y)),b,g&&Object(i.jsx)("div",{className:"textinput__error",children:g})]})},h=function(e){Object(a.a)(t,e);var n=Object(s.a)(t);function t(){return Object(r.a)(this,t),n.apply(this,arguments)}return Object(o.a)(t,[{key:"render",value:function(){return Object(i.jsx)(m,{htmlId:"example-error",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}}]),t}(p.a.Component)},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return b}));var r=t(2),o=t(3),a=t(5),s=t(4),i=t(0),l=t(1),p=t.n(l),d=t(6),u=t(8),c=t(7),m=t(16),h=t.n(m);var g=function(e){var n=e.htmlId,t=e.name,r=e.label,o=e.type,a=void 0===o?"text":o,s=e.required,l=void 0!==s&&s,p=e.onChange,m=e.placeholder,g=e.value,b=e.error,y=e.children,f=Object(u.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return Object(i.jsxs)("div",{className:h.a.fieldset,children:[Object(i.jsx)(c.a,{htmlFor:n,label:r,required:l}),Object(i.jsx)("input",Object(d.a)({id:n,type:a,name:t,placeholder:m,value:g,onChange:p,className:b&&h.a.inputError},f)),y,b&&Object(i.jsx)("div",{className:h.a.error,children:b})]})},b=function(e){Object(a.a)(t,e);var n=Object(s.a)(t);function t(){return Object(r.a)(this,t),n.apply(this,arguments)}return Object(o.a)(t,[{key:"render",value:function(){return Object(i.jsx)(g,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}}]),t}(p.a.Component)},,,,,,,,function(e,n,t){},function(e,n,t){var r={"./EyeIcon/Example":20,"./EyeIcon/Example.js":20,"./HelloWorld/ExampleHelloWorld":31,"./HelloWorld/ExampleHelloWorld.js":31,"./Label/ExampleOptional":21,"./Label/ExampleOptional.js":21,"./Label/ExampleRequired":22,"./Label/ExampleRequired.js":22,"./PasswordInput/ExampleAllFeatures":23,"./PasswordInput/ExampleAllFeatures.js":23,"./ProgressBar/Example100Percent":24,"./ProgressBar/Example100Percent.js":24,"./ProgressBar/Example10Percent":25,"./ProgressBar/Example10Percent.js":25,"./ProgressBar/Example70Percent":26,"./ProgressBar/Example70Percent.js":26,"./RegistrationForm/ExampleRegistrationForm":32,"./RegistrationForm/ExampleRegistrationForm.js":32,"./TextInput/ExampleError":27,"./TextInput/ExampleError.js":27,"./TextInput/ExampleOptional":28,"./TextInput/ExampleOptional.js":28,"./TextInputBEM/ExampleError":33,"./TextInputBEM/ExampleError.js":33,"./TextInputCSSModules/ExampleError":34,"./TextInputCSSModules/ExampleError.js":34,"./TextInputStyledComponents/ExampleError":29,"./TextInputStyledComponents/ExampleError.js":29,"./TextInputStyledComponents/ExampleOptional":30,"./TextInputStyledComponents/ExampleOptional.js":30};function o(e){var n=a(e);return t(n)}function a(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=a,e.exports=o,o.id=43},function(e,n,t){},,function(e,n,t){"use strict";t.r(n);var r=t(0),o=t(1),a=t.n(o),s=t(35),i=t.n(s),l=(t(42),t(2)),p=t(3),d=t(5),u=t(4),c=function(e){var n=e.components;return Object(r.jsx)("ul",{className:"navigation",children:n.map((function(e){return Object(r.jsx)("li",{children:Object(r.jsx)("a",{href:"#".concat(e),children:e})},e)}))})},m=t(18),h=t.n(m),g=t(36),b=t.n(g),y=function(e){Object(d.a)(t,e);var n=Object(u.a)(t);function t(){return Object(l.a)(this,t),n.apply(this,arguments)}return Object(p.a)(t,[{key:"componentDidMount",value:function(){h.a.registerLanguage("javascript",b.a),h.a.highlightBlock(this.element)}},{key:"render",value:function(){var e=this;return Object(r.jsx)("pre",{ref:function(n){e.element=n},children:Object(r.jsx)("code",{children:this.props.children})})}}]),t}(a.a.Component),f=function(e){Object(d.a)(o,e);var n=Object(u.a)(o);function o(e){var t;return Object(l.a)(this,o),(t=n.call(this,e)).toggleCode=function(e){e.preventDefault(),t.setState((function(e){return{showCode:!e.showCode}}))},t.state={showCode:!1},t}return Object(p.a)(o,[{key:"render",value:function(){var e=this.state.showCode,n=this.props.example,o=n.code,a=n.description,s=n.name,i=t(43)("./".concat(this.props.componentName,"/").concat(s)).default;return Object(r.jsxs)("div",{className:"example",children:[a&&Object(r.jsx)("h4",{children:a}),Object(r.jsx)(i,{}),Object(r.jsx)("p",{children:Object(r.jsxs)("a",{href:"",onClick:this.toggleCode,children:[e?"Hide":"Show"," Code"]})}),e&&Object(r.jsx)(y,{children:o})]})}}]),o}(a.a.Component),x=function(e){var n=e.props;return Object(r.jsxs)("table",{className:"props",children:[Object(r.jsx)("thead",{children:Object(r.jsxs)("tr",{children:[Object(r.jsx)("th",{children:"Name"}),Object(r.jsx)("th",{children:"Description"}),Object(r.jsx)("th",{children:"Type"}),Object(r.jsx)("th",{children:"Default"}),Object(r.jsx)("th",{children:"Required"})]})}),Object(r.jsx)("tbody",{children:Object.keys(n).map((function(e){return Object(r.jsxs)("tr",{children:[Object(r.jsx)("td",{children:e}),Object(r.jsx)("td",{children:n[e].description}),Object(r.jsx)("td",{children:n[e].type.name}),Object(r.jsx)("td",{children:n[e].defaultValue&&n[e].defaultValue.value}),Object(r.jsx)("td",{children:n[e].required&&"X"})]},e)}))})]})},v=function(e){var n=e.component,t=n.name,o=n.description,a=n.props,s=n.examples;return Object(r.jsxs)("div",{className:"componentpage",children:[Object(r.jsx)("h2",{children:t}),Object(r.jsx)("p",{children:o}),Object(r.jsxs)("h3",{children:["Example",s.length>1&&"s"]}),s.length>0?s.map((function(e){return Object(r.jsx)(f,{example:e,componentName:t},e.code)})):"No examples exist.",Object(r.jsx)("h3",{children:"Props"}),a?Object(r.jsx)(x,{props:a}):"This component accepts no props."]})},j=t(17),w=t.n(j),q=function(e){Object(d.a)(t,e);var n=Object(u.a)(t);function t(e){var r;return Object(l.a)(this,t),(r=n.call(this,e)).state={route:window.location.hash.substr(1)},r}return Object(p.a)(t,[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("hashchange",(function(){e.setState({route:window.location.hash.substr(1)})}))}},{key:"render",value:function(){var e=this.state.route,n=e?w.a.filter((function(n){return n.name===e}))[0]:w.a[0];return Object(r.jsxs)("div",{children:[Object(r.jsx)(c,{components:w.a.map((function(e){return e.name}))}),Object(r.jsx)(v,{component:n})]})}}]),t}(a.a.Component),T=function(e){e&&e instanceof Function&&t.e(3).then(t.bind(null,47)).then((function(n){var t=n.getCLS,r=n.getFID,o=n.getFCP,a=n.getLCP,s=n.getTTFB;t(e),r(e),o(e),a(e),s(e)}))};t(45);i.a.render(Object(r.jsx)(a.a.StrictMode,{children:Object(r.jsx)(q,{})}),document.getElementById("root")),T()}],[[46,1,2]]]);
//# sourceMappingURL=main.5f306838.chunk.js.map